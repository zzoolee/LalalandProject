<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="restaurant">
	
<!-- 이 영역에 SQL에 맞는 태그를 이용하여 쿼리문을 작성한다.

	사용되는 기본적인 태그들...
	<select>  ~~~ </select>
	<insert>  ~~~ </insert>
	<update>  ~~~ </update>
	<delete>  ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때  namespace와 연결하여 사용하는 이름
	
	
	2) parameterType 속성 : SQL문에 사용될 데이터가 들어있는 객체타입을 지정한다.
						(보통 VO클래스, 자바의 자료형 이름, 또는 alias 등이 사용된다.)
						
	3) resultType 속성 : select 문을 실행한 결과를 담을 객체타입을 지정한다.		
					 (보통 VO클래스, 자바의 자료형 이름, 또는 alias 등이 사용된다.)
					
	4) resultMap 속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 적절한 매핑을 위해 사용된다.	
				
 -->	

<!-- 	RES_CD, RES_NAME, RES_SORT, RES_INFO, RES_OPEN, RES_CLOSE, RES_IMG
 -->	
 
 
	<resultMap type="lala.vo.RestaurantVO" id="resMap">	
		<result column="RES_NAME" property="resName" />
		<result column="RES_INFO" property="resInfo" />
		<result column="RES_OPEN" property="resOpen" />
		<result column="RES_CLOSE" property="resClose" />
		<result column="RES_IMG" property="resImg" />
	</resultMap> 
	 
	<!-- <select id="getRestaurant" parameterType="lala.vo.RestaurantVO" resultType="lala.vo.RestaurantVO">
		select AT_CD, AT_NAME, AT_HEIGHT, SUBSTR(AT_INFO,1,50) AT_INFO, AT_IMG, AT_CHK, ZONE_CD 
		from attraction 
		where 1 = 1
		<if test="zoneCd!=null and zoneCd!=''">
		AND	ZONE_CD = #{zoneCd}
		</if>
		order by AT_CD asc
	</select> -->
	
	<select id="getRestaurant" parameterType="lala.vo.RestaurantVO" resultType="lala.vo.RestaurantVO">
		select * from restaurant
		
	</select>
	
	
	
</mapper>